package searchAvro; /**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class my_record extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4219456041331059502L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"my_record\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"viewid\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"count\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"start\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"viewparam\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sortby\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"originalquery\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"storeid\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"tags\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"searchquery\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"numproductsfound\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"sourceclient\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"timestamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"pincode\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"deviceid\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ssid\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"payloadid\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sqid\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sid\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"aid\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"vid\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"guides\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"filters\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"productids\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<my_record> ENCODER =
      new BinaryMessageEncoder<my_record>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<my_record> DECODER =
      new BinaryMessageDecoder<my_record>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<my_record> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<my_record> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<my_record>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this my_record to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a my_record from a ByteBuffer. */
  public static my_record fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public CharSequence id;
  @Deprecated public CharSequence viewid;
  @Deprecated public Integer count;
  @Deprecated public Integer start;
  @Deprecated public CharSequence viewparam;
  @Deprecated public CharSequence sortby;
  @Deprecated public CharSequence originalquery;
  @Deprecated public CharSequence storeid;
  @Deprecated public CharSequence tags;
  @Deprecated public CharSequence searchquery;
  @Deprecated public Integer numproductsfound;
  @Deprecated public CharSequence sourceclient;
  @Deprecated public Long timestamp;
  @Deprecated public Integer pincode;
  @Deprecated public CharSequence deviceid;
  @Deprecated public CharSequence ssid;
  @Deprecated public CharSequence payloadid;
  @Deprecated public CharSequence sqid;
  @Deprecated public CharSequence sid;
  @Deprecated public CharSequence aid;
  @Deprecated public CharSequence vid;
  @Deprecated public CharSequence guides;
  @Deprecated public CharSequence filters;
  @Deprecated public CharSequence productids;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public my_record() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param viewid The new value for viewid
   * @param count The new value for count
   * @param start The new value for start
   * @param viewparam The new value for viewparam
   * @param sortby The new value for sortby
   * @param originalquery The new value for originalquery
   * @param storeid The new value for storeid
   * @param tags The new value for tags
   * @param searchquery The new value for searchquery
   * @param numproductsfound The new value for numproductsfound
   * @param sourceclient The new value for sourceclient
   * @param timestamp The new value for timestamp
   * @param pincode The new value for pincode
   * @param deviceid The new value for deviceid
   * @param ssid The new value for ssid
   * @param payloadid The new value for payloadid
   * @param sqid The new value for sqid
   * @param sid The new value for sid
   * @param aid The new value for aid
   * @param vid The new value for vid
   * @param guides The new value for guides
   * @param filters The new value for filters
   * @param productids The new value for productids
   */
  public my_record(CharSequence id, CharSequence viewid, Integer count, Integer start, CharSequence viewparam, CharSequence sortby, CharSequence originalquery, CharSequence storeid, CharSequence tags, CharSequence searchquery, Integer numproductsfound, CharSequence sourceclient, Long timestamp, Integer pincode, CharSequence deviceid, CharSequence ssid, CharSequence payloadid, CharSequence sqid, CharSequence sid, CharSequence aid, CharSequence vid, CharSequence guides, CharSequence filters, CharSequence productids) {
    this.id = id;
    this.viewid = viewid;
    this.count = count;
    this.start = start;
    this.viewparam = viewparam;
    this.sortby = sortby;
    this.originalquery = originalquery;
    this.storeid = storeid;
    this.tags = tags;
    this.searchquery = searchquery;
    this.numproductsfound = numproductsfound;
    this.sourceclient = sourceclient;
    this.timestamp = timestamp;
    this.pincode = pincode;
    this.deviceid = deviceid;
    this.ssid = ssid;
    this.payloadid = payloadid;
    this.sqid = sqid;
    this.sid = sid;
    this.aid = aid;
    this.vid = vid;
    this.guides = guides;
    this.filters = filters;
    this.productids = productids;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return viewid;
    case 2: return count;
    case 3: return start;
    case 4: return viewparam;
    case 5: return sortby;
    case 6: return originalquery;
    case 7: return storeid;
    case 8: return tags;
    case 9: return searchquery;
    case 10: return numproductsfound;
    case 11: return sourceclient;
    case 12: return timestamp;
    case 13: return pincode;
    case 14: return deviceid;
    case 15: return ssid;
    case 16: return payloadid;
    case 17: return sqid;
    case 18: return sid;
    case 19: return aid;
    case 20: return vid;
    case 21: return guides;
    case 22: return filters;
    case 23: return productids;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: id = (CharSequence)value$; break;
    case 1: viewid = (CharSequence)value$; break;
    case 2: count = (Integer)value$; break;
    case 3: start = (Integer)value$; break;
    case 4: viewparam = (CharSequence)value$; break;
    case 5: sortby = (CharSequence)value$; break;
    case 6: originalquery = (CharSequence)value$; break;
    case 7: storeid = (CharSequence)value$; break;
    case 8: tags = (CharSequence)value$; break;
    case 9: searchquery = (CharSequence)value$; break;
    case 10: numproductsfound = (Integer)value$; break;
    case 11: sourceclient = (CharSequence)value$; break;
    case 12: timestamp = (Long)value$; break;
    case 13: pincode = (Integer)value$; break;
    case 14: deviceid = (CharSequence)value$; break;
    case 15: ssid = (CharSequence)value$; break;
    case 16: payloadid = (CharSequence)value$; break;
    case 17: sqid = (CharSequence)value$; break;
    case 18: sid = (CharSequence)value$; break;
    case 19: aid = (CharSequence)value$; break;
    case 20: vid = (CharSequence)value$; break;
    case 21: guides = (CharSequence)value$; break;
    case 22: filters = (CharSequence)value$; break;
    case 23: productids = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'viewid' field.
   * @return The value of the 'viewid' field.
   */
  public CharSequence getViewid() {
    return viewid;
  }

  /**
   * Sets the value of the 'viewid' field.
   * @param value the value to set.
   */
  public void setViewid(CharSequence value) {
    this.viewid = value;
  }

  /**
   * Gets the value of the 'count' field.
   * @return The value of the 'count' field.
   */
  public Integer getCount() {
    return count;
  }

  /**
   * Sets the value of the 'count' field.
   * @param value the value to set.
   */
  public void setCount(Integer value) {
    this.count = value;
  }

  /**
   * Gets the value of the 'start' field.
   * @return The value of the 'start' field.
   */
  public Integer getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * @param value the value to set.
   */
  public void setStart(Integer value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'viewparam' field.
   * @return The value of the 'viewparam' field.
   */
  public CharSequence getViewparam() {
    return viewparam;
  }

  /**
   * Sets the value of the 'viewparam' field.
   * @param value the value to set.
   */
  public void setViewparam(CharSequence value) {
    this.viewparam = value;
  }

  /**
   * Gets the value of the 'sortby' field.
   * @return The value of the 'sortby' field.
   */
  public CharSequence getSortby() {
    return sortby;
  }

  /**
   * Sets the value of the 'sortby' field.
   * @param value the value to set.
   */
  public void setSortby(CharSequence value) {
    this.sortby = value;
  }

  /**
   * Gets the value of the 'originalquery' field.
   * @return The value of the 'originalquery' field.
   */
  public CharSequence getOriginalquery() {
    return originalquery;
  }

  /**
   * Sets the value of the 'originalquery' field.
   * @param value the value to set.
   */
  public void setOriginalquery(CharSequence value) {
    this.originalquery = value;
  }

  /**
   * Gets the value of the 'storeid' field.
   * @return The value of the 'storeid' field.
   */
  public CharSequence getStoreid() {
    return storeid;
  }

  /**
   * Sets the value of the 'storeid' field.
   * @param value the value to set.
   */
  public void setStoreid(CharSequence value) {
    this.storeid = value;
  }

  /**
   * Gets the value of the 'tags' field.
   * @return The value of the 'tags' field.
   */
  public CharSequence getTags() {
    return tags;
  }

  /**
   * Sets the value of the 'tags' field.
   * @param value the value to set.
   */
  public void setTags(CharSequence value) {
    this.tags = value;
  }

  /**
   * Gets the value of the 'searchquery' field.
   * @return The value of the 'searchquery' field.
   */
  public CharSequence getSearchquery() {
    return searchquery;
  }

  /**
   * Sets the value of the 'searchquery' field.
   * @param value the value to set.
   */
  public void setSearchquery(CharSequence value) {
    this.searchquery = value;
  }

  /**
   * Gets the value of the 'numproductsfound' field.
   * @return The value of the 'numproductsfound' field.
   */
  public Integer getNumproductsfound() {
    return numproductsfound;
  }

  /**
   * Sets the value of the 'numproductsfound' field.
   * @param value the value to set.
   */
  public void setNumproductsfound(Integer value) {
    this.numproductsfound = value;
  }

  /**
   * Gets the value of the 'sourceclient' field.
   * @return The value of the 'sourceclient' field.
   */
  public CharSequence getSourceclient() {
    return sourceclient;
  }

  /**
   * Sets the value of the 'sourceclient' field.
   * @param value the value to set.
   */
  public void setSourceclient(CharSequence value) {
    this.sourceclient = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'pincode' field.
   * @return The value of the 'pincode' field.
   */
  public Integer getPincode() {
    return pincode;
  }

  /**
   * Sets the value of the 'pincode' field.
   * @param value the value to set.
   */
  public void setPincode(Integer value) {
    this.pincode = value;
  }

  /**
   * Gets the value of the 'deviceid' field.
   * @return The value of the 'deviceid' field.
   */
  public CharSequence getDeviceid() {
    return deviceid;
  }

  /**
   * Sets the value of the 'deviceid' field.
   * @param value the value to set.
   */
  public void setDeviceid(CharSequence value) {
    this.deviceid = value;
  }

  /**
   * Gets the value of the 'ssid' field.
   * @return The value of the 'ssid' field.
   */
  public CharSequence getSsid() {
    return ssid;
  }

  /**
   * Sets the value of the 'ssid' field.
   * @param value the value to set.
   */
  public void setSsid(CharSequence value) {
    this.ssid = value;
  }

  /**
   * Gets the value of the 'payloadid' field.
   * @return The value of the 'payloadid' field.
   */
  public CharSequence getPayloadid() {
    return payloadid;
  }

  /**
   * Sets the value of the 'payloadid' field.
   * @param value the value to set.
   */
  public void setPayloadid(CharSequence value) {
    this.payloadid = value;
  }

  /**
   * Gets the value of the 'sqid' field.
   * @return The value of the 'sqid' field.
   */
  public CharSequence getSqid() {
    return sqid;
  }

  /**
   * Sets the value of the 'sqid' field.
   * @param value the value to set.
   */
  public void setSqid(CharSequence value) {
    this.sqid = value;
  }

  /**
   * Gets the value of the 'sid' field.
   * @return The value of the 'sid' field.
   */
  public CharSequence getSid() {
    return sid;
  }

  /**
   * Sets the value of the 'sid' field.
   * @param value the value to set.
   */
  public void setSid(CharSequence value) {
    this.sid = value;
  }

  /**
   * Gets the value of the 'aid' field.
   * @return The value of the 'aid' field.
   */
  public CharSequence getAid() {
    return aid;
  }

  /**
   * Sets the value of the 'aid' field.
   * @param value the value to set.
   */
  public void setAid(CharSequence value) {
    this.aid = value;
  }

  /**
   * Gets the value of the 'vid' field.
   * @return The value of the 'vid' field.
   */
  public CharSequence getVid() {
    return vid;
  }

  /**
   * Sets the value of the 'vid' field.
   * @param value the value to set.
   */
  public void setVid(CharSequence value) {
    this.vid = value;
  }

  /**
   * Gets the value of the 'guides' field.
   * @return The value of the 'guides' field.
   */
  public CharSequence getGuides() {
    return guides;
  }

  /**
   * Sets the value of the 'guides' field.
   * @param value the value to set.
   */
  public void setGuides(CharSequence value) {
    this.guides = value;
  }

  /**
   * Gets the value of the 'filters' field.
   * @return The value of the 'filters' field.
   */
  public CharSequence getFilters() {
    return filters;
  }

  /**
   * Sets the value of the 'filters' field.
   * @param value the value to set.
   */
  public void setFilters(CharSequence value) {
    this.filters = value;
  }

  /**
   * Gets the value of the 'productids' field.
   * @return The value of the 'productids' field.
   */
  public CharSequence getProductids() {
    return productids;
  }

  /**
   * Sets the value of the 'productids' field.
   * @param value the value to set.
   */
  public void setProductids(CharSequence value) {
    this.productids = value;
  }

  /**
   * Creates a new my_record RecordBuilder.
   * @return A new my_record RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new my_record RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new my_record RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new my_record RecordBuilder by copying an existing my_record instance.
   * @param other The existing instance to copy.
   * @return A new my_record RecordBuilder
   */
  public static Builder newBuilder(my_record other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for my_record instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<my_record>
    implements org.apache.avro.data.RecordBuilder<my_record> {

    private CharSequence id;
    private CharSequence viewid;
    private Integer count;
    private Integer start;
    private CharSequence viewparam;
    private CharSequence sortby;
    private CharSequence originalquery;
    private CharSequence storeid;
    private CharSequence tags;
    private CharSequence searchquery;
    private Integer numproductsfound;
    private CharSequence sourceclient;
    private Long timestamp;
    private Integer pincode;
    private CharSequence deviceid;
    private CharSequence ssid;
    private CharSequence payloadid;
    private CharSequence sqid;
    private CharSequence sid;
    private CharSequence aid;
    private CharSequence vid;
    private CharSequence guides;
    private CharSequence filters;
    private CharSequence productids;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.viewid)) {
        this.viewid = data().deepCopy(fields()[1].schema(), other.viewid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.count)) {
        this.count = data().deepCopy(fields()[2].schema(), other.count);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.start)) {
        this.start = data().deepCopy(fields()[3].schema(), other.start);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.viewparam)) {
        this.viewparam = data().deepCopy(fields()[4].schema(), other.viewparam);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sortby)) {
        this.sortby = data().deepCopy(fields()[5].schema(), other.sortby);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.originalquery)) {
        this.originalquery = data().deepCopy(fields()[6].schema(), other.originalquery);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.storeid)) {
        this.storeid = data().deepCopy(fields()[7].schema(), other.storeid);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.tags)) {
        this.tags = data().deepCopy(fields()[8].schema(), other.tags);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.searchquery)) {
        this.searchquery = data().deepCopy(fields()[9].schema(), other.searchquery);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.numproductsfound)) {
        this.numproductsfound = data().deepCopy(fields()[10].schema(), other.numproductsfound);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.sourceclient)) {
        this.sourceclient = data().deepCopy(fields()[11].schema(), other.sourceclient);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[12].schema(), other.timestamp);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.pincode)) {
        this.pincode = data().deepCopy(fields()[13].schema(), other.pincode);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.deviceid)) {
        this.deviceid = data().deepCopy(fields()[14].schema(), other.deviceid);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.ssid)) {
        this.ssid = data().deepCopy(fields()[15].schema(), other.ssid);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.payloadid)) {
        this.payloadid = data().deepCopy(fields()[16].schema(), other.payloadid);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.sqid)) {
        this.sqid = data().deepCopy(fields()[17].schema(), other.sqid);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.sid)) {
        this.sid = data().deepCopy(fields()[18].schema(), other.sid);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.aid)) {
        this.aid = data().deepCopy(fields()[19].schema(), other.aid);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.vid)) {
        this.vid = data().deepCopy(fields()[20].schema(), other.vid);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.guides)) {
        this.guides = data().deepCopy(fields()[21].schema(), other.guides);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.filters)) {
        this.filters = data().deepCopy(fields()[22].schema(), other.filters);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.productids)) {
        this.productids = data().deepCopy(fields()[23].schema(), other.productids);
        fieldSetFlags()[23] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing my_record instance
     * @param other The existing instance to copy.
     */
    private Builder(my_record other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.viewid)) {
        this.viewid = data().deepCopy(fields()[1].schema(), other.viewid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.count)) {
        this.count = data().deepCopy(fields()[2].schema(), other.count);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.start)) {
        this.start = data().deepCopy(fields()[3].schema(), other.start);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.viewparam)) {
        this.viewparam = data().deepCopy(fields()[4].schema(), other.viewparam);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sortby)) {
        this.sortby = data().deepCopy(fields()[5].schema(), other.sortby);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.originalquery)) {
        this.originalquery = data().deepCopy(fields()[6].schema(), other.originalquery);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.storeid)) {
        this.storeid = data().deepCopy(fields()[7].schema(), other.storeid);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.tags)) {
        this.tags = data().deepCopy(fields()[8].schema(), other.tags);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.searchquery)) {
        this.searchquery = data().deepCopy(fields()[9].schema(), other.searchquery);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.numproductsfound)) {
        this.numproductsfound = data().deepCopy(fields()[10].schema(), other.numproductsfound);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.sourceclient)) {
        this.sourceclient = data().deepCopy(fields()[11].schema(), other.sourceclient);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[12].schema(), other.timestamp);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.pincode)) {
        this.pincode = data().deepCopy(fields()[13].schema(), other.pincode);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.deviceid)) {
        this.deviceid = data().deepCopy(fields()[14].schema(), other.deviceid);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.ssid)) {
        this.ssid = data().deepCopy(fields()[15].schema(), other.ssid);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.payloadid)) {
        this.payloadid = data().deepCopy(fields()[16].schema(), other.payloadid);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.sqid)) {
        this.sqid = data().deepCopy(fields()[17].schema(), other.sqid);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.sid)) {
        this.sid = data().deepCopy(fields()[18].schema(), other.sid);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.aid)) {
        this.aid = data().deepCopy(fields()[19].schema(), other.aid);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.vid)) {
        this.vid = data().deepCopy(fields()[20].schema(), other.vid);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.guides)) {
        this.guides = data().deepCopy(fields()[21].schema(), other.guides);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.filters)) {
        this.filters = data().deepCopy(fields()[22].schema(), other.filters);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.productids)) {
        this.productids = data().deepCopy(fields()[23].schema(), other.productids);
        fieldSetFlags()[23] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public Builder setId(CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'viewid' field.
      * @return The value.
      */
    public CharSequence getViewid() {
      return viewid;
    }

    /**
      * Sets the value of the 'viewid' field.
      * @param value The value of 'viewid'.
      * @return This builder.
      */
    public Builder setViewid(CharSequence value) {
      validate(fields()[1], value);
      this.viewid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'viewid' field has been set.
      * @return True if the 'viewid' field has been set, false otherwise.
      */
    public boolean hasViewid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'viewid' field.
      * @return This builder.
      */
    public Builder clearViewid() {
      viewid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'count' field.
      * @return The value.
      */
    public Integer getCount() {
      return count;
    }

    /**
      * Sets the value of the 'count' field.
      * @param value The value of 'count'.
      * @return This builder.
      */
    public Builder setCount(Integer value) {
      validate(fields()[2], value);
      this.count = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'count' field has been set.
      * @return True if the 'count' field has been set, false otherwise.
      */
    public boolean hasCount() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'count' field.
      * @return This builder.
      */
    public Builder clearCount() {
      count = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'start' field.
      * @return The value.
      */
    public Integer getStart() {
      return start;
    }

    /**
      * Sets the value of the 'start' field.
      * @param value The value of 'start'.
      * @return This builder.
      */
    public Builder setStart(Integer value) {
      validate(fields()[3], value);
      this.start = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'start' field has been set.
      * @return True if the 'start' field has been set, false otherwise.
      */
    public boolean hasStart() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'start' field.
      * @return This builder.
      */
    public Builder clearStart() {
      start = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'viewparam' field.
      * @return The value.
      */
    public CharSequence getViewparam() {
      return viewparam;
    }

    /**
      * Sets the value of the 'viewparam' field.
      * @param value The value of 'viewparam'.
      * @return This builder.
      */
    public Builder setViewparam(CharSequence value) {
      validate(fields()[4], value);
      this.viewparam = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'viewparam' field has been set.
      * @return True if the 'viewparam' field has been set, false otherwise.
      */
    public boolean hasViewparam() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'viewparam' field.
      * @return This builder.
      */
    public Builder clearViewparam() {
      viewparam = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'sortby' field.
      * @return The value.
      */
    public CharSequence getSortby() {
      return sortby;
    }

    /**
      * Sets the value of the 'sortby' field.
      * @param value The value of 'sortby'.
      * @return This builder.
      */
    public Builder setSortby(CharSequence value) {
      validate(fields()[5], value);
      this.sortby = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'sortby' field has been set.
      * @return True if the 'sortby' field has been set, false otherwise.
      */
    public boolean hasSortby() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'sortby' field.
      * @return This builder.
      */
    public Builder clearSortby() {
      sortby = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'originalquery' field.
      * @return The value.
      */
    public CharSequence getOriginalquery() {
      return originalquery;
    }

    /**
      * Sets the value of the 'originalquery' field.
      * @param value The value of 'originalquery'.
      * @return This builder.
      */
    public Builder setOriginalquery(CharSequence value) {
      validate(fields()[6], value);
      this.originalquery = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'originalquery' field has been set.
      * @return True if the 'originalquery' field has been set, false otherwise.
      */
    public boolean hasOriginalquery() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'originalquery' field.
      * @return This builder.
      */
    public Builder clearOriginalquery() {
      originalquery = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'storeid' field.
      * @return The value.
      */
    public CharSequence getStoreid() {
      return storeid;
    }

    /**
      * Sets the value of the 'storeid' field.
      * @param value The value of 'storeid'.
      * @return This builder.
      */
    public Builder setStoreid(CharSequence value) {
      validate(fields()[7], value);
      this.storeid = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'storeid' field has been set.
      * @return True if the 'storeid' field has been set, false otherwise.
      */
    public boolean hasStoreid() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'storeid' field.
      * @return This builder.
      */
    public Builder clearStoreid() {
      storeid = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'tags' field.
      * @return The value.
      */
    public CharSequence getTags() {
      return tags;
    }

    /**
      * Sets the value of the 'tags' field.
      * @param value The value of 'tags'.
      * @return This builder.
      */
    public Builder setTags(CharSequence value) {
      validate(fields()[8], value);
      this.tags = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'tags' field has been set.
      * @return True if the 'tags' field has been set, false otherwise.
      */
    public boolean hasTags() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'tags' field.
      * @return This builder.
      */
    public Builder clearTags() {
      tags = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'searchquery' field.
      * @return The value.
      */
    public CharSequence getSearchquery() {
      return searchquery;
    }

    /**
      * Sets the value of the 'searchquery' field.
      * @param value The value of 'searchquery'.
      * @return This builder.
      */
    public Builder setSearchquery(CharSequence value) {
      validate(fields()[9], value);
      this.searchquery = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'searchquery' field has been set.
      * @return True if the 'searchquery' field has been set, false otherwise.
      */
    public boolean hasSearchquery() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'searchquery' field.
      * @return This builder.
      */
    public Builder clearSearchquery() {
      searchquery = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'numproductsfound' field.
      * @return The value.
      */
    public Integer getNumproductsfound() {
      return numproductsfound;
    }

    /**
      * Sets the value of the 'numproductsfound' field.
      * @param value The value of 'numproductsfound'.
      * @return This builder.
      */
    public Builder setNumproductsfound(Integer value) {
      validate(fields()[10], value);
      this.numproductsfound = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'numproductsfound' field has been set.
      * @return True if the 'numproductsfound' field has been set, false otherwise.
      */
    public boolean hasNumproductsfound() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'numproductsfound' field.
      * @return This builder.
      */
    public Builder clearNumproductsfound() {
      numproductsfound = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceclient' field.
      * @return The value.
      */
    public CharSequence getSourceclient() {
      return sourceclient;
    }

    /**
      * Sets the value of the 'sourceclient' field.
      * @param value The value of 'sourceclient'.
      * @return This builder.
      */
    public Builder setSourceclient(CharSequence value) {
      validate(fields()[11], value);
      this.sourceclient = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceclient' field has been set.
      * @return True if the 'sourceclient' field has been set, false otherwise.
      */
    public boolean hasSourceclient() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'sourceclient' field.
      * @return This builder.
      */
    public Builder clearSourceclient() {
      sourceclient = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public Long getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public Builder setTimestamp(Long value) {
      validate(fields()[12], value);
      this.timestamp = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'pincode' field.
      * @return The value.
      */
    public Integer getPincode() {
      return pincode;
    }

    /**
      * Sets the value of the 'pincode' field.
      * @param value The value of 'pincode'.
      * @return This builder.
      */
    public Builder setPincode(Integer value) {
      validate(fields()[13], value);
      this.pincode = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'pincode' field has been set.
      * @return True if the 'pincode' field has been set, false otherwise.
      */
    public boolean hasPincode() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'pincode' field.
      * @return This builder.
      */
    public Builder clearPincode() {
      pincode = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceid' field.
      * @return The value.
      */
    public CharSequence getDeviceid() {
      return deviceid;
    }

    /**
      * Sets the value of the 'deviceid' field.
      * @param value The value of 'deviceid'.
      * @return This builder.
      */
    public Builder setDeviceid(CharSequence value) {
      validate(fields()[14], value);
      this.deviceid = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceid' field has been set.
      * @return True if the 'deviceid' field has been set, false otherwise.
      */
    public boolean hasDeviceid() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'deviceid' field.
      * @return This builder.
      */
    public Builder clearDeviceid() {
      deviceid = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'ssid' field.
      * @return The value.
      */
    public CharSequence getSsid() {
      return ssid;
    }

    /**
      * Sets the value of the 'ssid' field.
      * @param value The value of 'ssid'.
      * @return This builder.
      */
    public Builder setSsid(CharSequence value) {
      validate(fields()[15], value);
      this.ssid = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'ssid' field has been set.
      * @return True if the 'ssid' field has been set, false otherwise.
      */
    public boolean hasSsid() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'ssid' field.
      * @return This builder.
      */
    public Builder clearSsid() {
      ssid = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'payloadid' field.
      * @return The value.
      */
    public CharSequence getPayloadid() {
      return payloadid;
    }

    /**
      * Sets the value of the 'payloadid' field.
      * @param value The value of 'payloadid'.
      * @return This builder.
      */
    public Builder setPayloadid(CharSequence value) {
      validate(fields()[16], value);
      this.payloadid = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'payloadid' field has been set.
      * @return True if the 'payloadid' field has been set, false otherwise.
      */
    public boolean hasPayloadid() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'payloadid' field.
      * @return This builder.
      */
    public Builder clearPayloadid() {
      payloadid = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'sqid' field.
      * @return The value.
      */
    public CharSequence getSqid() {
      return sqid;
    }

    /**
      * Sets the value of the 'sqid' field.
      * @param value The value of 'sqid'.
      * @return This builder.
      */
    public Builder setSqid(CharSequence value) {
      validate(fields()[17], value);
      this.sqid = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'sqid' field has been set.
      * @return True if the 'sqid' field has been set, false otherwise.
      */
    public boolean hasSqid() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'sqid' field.
      * @return This builder.
      */
    public Builder clearSqid() {
      sqid = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'sid' field.
      * @return The value.
      */
    public CharSequence getSid() {
      return sid;
    }

    /**
      * Sets the value of the 'sid' field.
      * @param value The value of 'sid'.
      * @return This builder.
      */
    public Builder setSid(CharSequence value) {
      validate(fields()[18], value);
      this.sid = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'sid' field has been set.
      * @return True if the 'sid' field has been set, false otherwise.
      */
    public boolean hasSid() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'sid' field.
      * @return This builder.
      */
    public Builder clearSid() {
      sid = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'aid' field.
      * @return The value.
      */
    public CharSequence getAid() {
      return aid;
    }

    /**
      * Sets the value of the 'aid' field.
      * @param value The value of 'aid'.
      * @return This builder.
      */
    public Builder setAid(CharSequence value) {
      validate(fields()[19], value);
      this.aid = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'aid' field has been set.
      * @return True if the 'aid' field has been set, false otherwise.
      */
    public boolean hasAid() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'aid' field.
      * @return This builder.
      */
    public Builder clearAid() {
      aid = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'vid' field.
      * @return The value.
      */
    public CharSequence getVid() {
      return vid;
    }

    /**
      * Sets the value of the 'vid' field.
      * @param value The value of 'vid'.
      * @return This builder.
      */
    public Builder setVid(CharSequence value) {
      validate(fields()[20], value);
      this.vid = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'vid' field has been set.
      * @return True if the 'vid' field has been set, false otherwise.
      */
    public boolean hasVid() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'vid' field.
      * @return This builder.
      */
    public Builder clearVid() {
      vid = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'guides' field.
      * @return The value.
      */
    public CharSequence getGuides() {
      return guides;
    }

    /**
      * Sets the value of the 'guides' field.
      * @param value The value of 'guides'.
      * @return This builder.
      */
    public Builder setGuides(CharSequence value) {
      validate(fields()[21], value);
      this.guides = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'guides' field has been set.
      * @return True if the 'guides' field has been set, false otherwise.
      */
    public boolean hasGuides() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'guides' field.
      * @return This builder.
      */
    public Builder clearGuides() {
      guides = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'filters' field.
      * @return The value.
      */
    public CharSequence getFilters() {
      return filters;
    }

    /**
      * Sets the value of the 'filters' field.
      * @param value The value of 'filters'.
      * @return This builder.
      */
    public Builder setFilters(CharSequence value) {
      validate(fields()[22], value);
      this.filters = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'filters' field has been set.
      * @return True if the 'filters' field has been set, false otherwise.
      */
    public boolean hasFilters() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'filters' field.
      * @return This builder.
      */
    public Builder clearFilters() {
      filters = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'productids' field.
      * @return The value.
      */
    public CharSequence getProductids() {
      return productids;
    }

    /**
      * Sets the value of the 'productids' field.
      * @param value The value of 'productids'.
      * @return This builder.
      */
    public Builder setProductids(CharSequence value) {
      validate(fields()[23], value);
      this.productids = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'productids' field has been set.
      * @return True if the 'productids' field has been set, false otherwise.
      */
    public boolean hasProductids() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'productids' field.
      * @return This builder.
      */
    public Builder clearProductids() {
      productids = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public my_record build() {
      try {
        my_record record = new my_record();
        record.id = fieldSetFlags()[0] ? this.id : (CharSequence) defaultValue(fields()[0]);
        record.viewid = fieldSetFlags()[1] ? this.viewid : (CharSequence) defaultValue(fields()[1]);
        record.count = fieldSetFlags()[2] ? this.count : (Integer) defaultValue(fields()[2]);
        record.start = fieldSetFlags()[3] ? this.start : (Integer) defaultValue(fields()[3]);
        record.viewparam = fieldSetFlags()[4] ? this.viewparam : (CharSequence) defaultValue(fields()[4]);
        record.sortby = fieldSetFlags()[5] ? this.sortby : (CharSequence) defaultValue(fields()[5]);
        record.originalquery = fieldSetFlags()[6] ? this.originalquery : (CharSequence) defaultValue(fields()[6]);
        record.storeid = fieldSetFlags()[7] ? this.storeid : (CharSequence) defaultValue(fields()[7]);
        record.tags = fieldSetFlags()[8] ? this.tags : (CharSequence) defaultValue(fields()[8]);
        record.searchquery = fieldSetFlags()[9] ? this.searchquery : (CharSequence) defaultValue(fields()[9]);
        record.numproductsfound = fieldSetFlags()[10] ? this.numproductsfound : (Integer) defaultValue(fields()[10]);
        record.sourceclient = fieldSetFlags()[11] ? this.sourceclient : (CharSequence) defaultValue(fields()[11]);
        record.timestamp = fieldSetFlags()[12] ? this.timestamp : (Long) defaultValue(fields()[12]);
        record.pincode = fieldSetFlags()[13] ? this.pincode : (Integer) defaultValue(fields()[13]);
        record.deviceid = fieldSetFlags()[14] ? this.deviceid : (CharSequence) defaultValue(fields()[14]);
        record.ssid = fieldSetFlags()[15] ? this.ssid : (CharSequence) defaultValue(fields()[15]);
        record.payloadid = fieldSetFlags()[16] ? this.payloadid : (CharSequence) defaultValue(fields()[16]);
        record.sqid = fieldSetFlags()[17] ? this.sqid : (CharSequence) defaultValue(fields()[17]);
        record.sid = fieldSetFlags()[18] ? this.sid : (CharSequence) defaultValue(fields()[18]);
        record.aid = fieldSetFlags()[19] ? this.aid : (CharSequence) defaultValue(fields()[19]);
        record.vid = fieldSetFlags()[20] ? this.vid : (CharSequence) defaultValue(fields()[20]);
        record.guides = fieldSetFlags()[21] ? this.guides : (CharSequence) defaultValue(fields()[21]);
        record.filters = fieldSetFlags()[22] ? this.filters : (CharSequence) defaultValue(fields()[22]);
        record.productids = fieldSetFlags()[23] ? this.productids : (CharSequence) defaultValue(fields()[23]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<my_record>
    WRITER$ = (org.apache.avro.io.DatumWriter<my_record>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<my_record>
    READER$ = (org.apache.avro.io.DatumReader<my_record>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
